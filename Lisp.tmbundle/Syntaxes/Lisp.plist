{
	//
	// Generic Lisp.
	// chris@cjack.com
	// Feel free to send additions and modifications.
	//
	// This is a tiny, tiny subset of the enormous ANSI Common Lisp language.
	// More may be added, but probably to a superset "Common Lisp" syntax... (some of this should probably be moved to such a file, in fact)
	// This file should ideally be a basis for Scheme and other consistently S-expression-only dialects of Lisp. Maybe.
	//
	name = "Lisp";
	fileTypes = ( lisp, cl, l, mud, el, scm, sch );		// mud is for the Zork MDL source; el is Emacs lisp.
														// Not that we really handle MDL, but it's a little more pleasant, at least.
														// scm and sch are Scheme, which really needs a superset syntax file of it's own.
	foldingStartMarker = "\\(";
	foldingStopMarker = "\\)";
	increaseIndentPattern = "^.*\\(.*[^)\"]$";
	smartTypingPairs = (
	   ( "(", ")" ), ( "[", "]" ), ( "{", "}" ), ( "\"", "\"" )
	);
	highlightPairs = (
	   ( "(", ")" ), ( "[", "]" ), ( "{", "}" )
	);
	foregroundColor = "#000000";
	backgroundColor = "#FFFFFF";
	patterns = (
		{ name = "comments.line.lisp"; match = ";.*$"; foregroundColor = "#236B8E"; fontStyle = ( italic ); },
		
		{
			name = "keywords.functions.lisp";
			match = "(\\<(?i:defun|defmethod|defmacro)\\>)(\\s+)((\\w|\\-|\\!|\\?)*)";
			"fontStyle[1]" = ( bold );
			"fontStyle[3]" = ( underline );
			 foregroundColor = "blue";
		},
		
		{
			// better class? function #'+ or character constant #\a (might want to highlight these two constructs differently)
			name = "constants.lisp";
			match = "#(\\w|[\\\\+-=<>'\"&#])+";
			foregroundColor = "#8B2252";
		},

// Need to think about how to make this work properly. Both atoms and lists can be quoted.
//		{
//			name = "Quoted Element1";
//			match = "'(\\w|[\\\\+-=<>'\"&#\\(\\)])+";
//			foregroundColor = "#0000CD";
//		},
		
//		{
//			name = "Quoted Element2";
//			begin = "'\\("; end = "\\)";
//			foregroundColor = "#0000CD";
//		},
		
		{
			name = "variables.globals.lisp";
			match = "\\*(\\S*)\\*";
			foregroundColor = "#5C246E";
		},
		
		{ name = "keywords.lisp"; match = "\\<(?i:case|car|cdr|cons|cond|loop|lambda|format|setq|setf|quote|do|eval|append|let|list|listp|null|memberp|nil|t||load|loop|if|else|eq|neq|and|or|when|progn)\\>"; fontStyle = ( bold ); foregroundColor = "blue"; },
		{ name = "constants.numeric.lisp"; match = "\\<((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\>"; foregroundColor = "#0000CD"; },
		{ name = "strings.double-quoted.lisp"; begin = "\""; end = "\""; swallow = "\\\\."; foregroundColor = "#8B2252"; },
	);
}
