<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby  

$myPath = ENV['TM_DIRECTORY'] 
	
$tags = [] #user defined contexts
def readContexts(a,re)
  # processes contexts.gtd into script
  if a =~ re
    context = "#{$`}"
    a = "#{$'}"
    if a =~ re
      tabCommand = "#{$`}"
      a = "#{$'}"
      if a =~ re
        tabString = "#{$`}"
         a = "#{$'}"
        if a =~ re
          regex = "#{$`}"
          color = "#{$'}"
        end
      end
    end
  end
  tasks = []
  $tags.push({:label =&gt; context, :regexp =&gt; regex, :color =&gt; color})   
end


require "#{ENV['TM_SUPPORT_PATH']}/lib/textmate"
require "erb"
include ERB::Util

def TextMate.file_link (file, line = 0)
  return "txmt://open/?url=file://" +
    file.gsub(/[^a-zA-Z0-9.-\/]/) { |m| sprintf("%%%02X", m[0]) } +
    "&amp;amp;line=" + line.to_s
end

# the contexts.gtd file is read, and converted into $contexts
file = File.open($myPath+"/contexts.gtd", "r")
file.each do |line|
  readContexts(line.chomp,/\|/)
end

# setup empty array for per tag results
$tags.each { |tag| tag[:matches] = [ ] }

TextMate.each_text_file do |file|
  $tags.each do |tag|
    re = Regexp.new(tag[:regexp])
    File.open(file) do |io|
	 if (file != 'contexts.gtd')
        io.grep(re) do |content|
          results = {
            :file =&gt; file[1..-5],
            :line =&gt; io.lineno,
            :content =&gt; content
          }
          results[:match] = html_escape($1)
          tag[:matches] &lt;&lt; results
        end
      end
    end
  end
end

tmpl_file = "#{ENV['TM_BUNDLE_SUPPORT']}/template.rhtml"
puts ERB.new(File.open(tmpl_file), 0, '&lt;&gt;').result
</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Show Custom GTD List </string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.plain.gtd</string>
	<key>uuid</key>
	<string>EF752329-90BF-4057-AD8E-20703AC6B03B</string>
</dict>
</plist>
