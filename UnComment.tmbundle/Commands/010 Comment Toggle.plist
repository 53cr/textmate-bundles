<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>captureFormatString</key>
	<string>$1 $3</string>
	<key>capturePattern</key>
	<string>^(.*)line (\d+)(.*)$</string>
	<key>command</key>
	<string>perl -e '$markers={"pl,pm,rb"=&gt;["#",""],"plist,c,css,m+h,cp,cpp,h,p,pas,js,htc,c++,h++"=&gt;["/*","*/","//",""],"java,cc,mm"=&gt;["//","","/*","*/"],"html,htm,xml"=&gt;["&lt;!--","--&gt;"],"bib,ltx,tex,ps,eps"=&gt;["%",""],"php"=&gt;["#","","/*","*/","&lt;!--","--&gt;","//",""],"mli,ml,mll,mly"=&gt;["(*","*)"],"script,adb,ads,sql,ddl,dml"=&gt;["--",""],"f,f77"=&gt;["C ",""],"inf,f90"=&gt;["!",""],};$tab=4;while(($k,$v)=each(%$markers)){foreach(split(/\s*,\s*/,$k)){$c{"$_"}=$v;}}$_=shift@ARGV;($type)=/\.([^.]*)$/;foreach$option(@ARGV){if($option=~/^\.(.*)$/){$type=$1;}$opt-&gt;{$option}++;}unless($c{"$type"}){$type="pl";}($start,$finish,@etc)=@{$c{$type}};$isntfirst=0;while(&lt;STDIN&gt;){push@in,$_;($indent)=/^([ \t]*)/;$indentl=0;foreach$j(1..(length($indent))){$ch=substr($indent,$j-1,1);if($ch eq" "){$indentl++;}else{unless($indentl%$tab){$indentl+=$tab;}else{$indentl+=$indentl%$tab;}}}unless($isntfirst){$indentmin=$indent;$indentminl=$indentl;$isntfirst++;}else{if($indentl&lt;$indentminl||$indent eq""){$indentmin=$indent;$indentminl=$indentl;}}}$isntfirst=0;foreach(@in){$lineend="";if($opt-&gt;{"toggle"}){$iscomment=$isfirstofpair=$isntfirst=0;}if(chomp){$lineend="\n";}unless(/\S/){unless($opt-&gt;{"comment-whitespace"}){$out.=$_."\n";next;}}unless($isntfirst){$isntfirst=1;foreach$delimiter(@{$c{"$type"}}){$isfirstofpair=1-$isfirstofpair;$delimiterq=quotemeta($delimiter);if($isfirstofpair){if(/^\s*$delimiterq/){$iscomment=1;$start=$delimiter;$startq=$delimiterq;}}elsif($iscomment){$finish=$delimiter;$finishq=$delimiterq;last;}}}if($opt-&gt;{"uncomment"}){$iscomment=1;}if($opt-&gt;{"comment"}){$iscomment=0;}if($iscomment){s/^(\s*)$startq(\ )?/$1/;s/(\ )?$finishq(\s*)$/$1/;$out.=$_.$lineend;}else{if($opt-&gt;{"first-column"}){$out.=$start;unless($indentmin){$out.=" ";}$out.="$_";if($finish){$out.=" ".$finish;}$out.=$lineend;}else{s/^$indentmin//;$out.=$indentmin.$start." $_";if($finish){$out.=" ".$finish;}$out.=$lineend;}}}print$out;' "$TM_FILEPATH"</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@'</string>
	<key>lineCaptureRegister</key>
	<string>2</string>
	<key>name</key>
	<string>Comment Toggle</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>DA0A614F-5F16-11D9-B9C3-000D93589AF6</string>
</dict>
</plist>
