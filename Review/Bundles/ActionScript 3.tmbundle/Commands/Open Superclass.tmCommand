<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

#TODO: Search all compiler library paths (add mx, and AS3_LIB)

require ENV["TM_SUPPORT_PATH"] + "/lib/textmate.rb"
require ENV["TM_SUPPORT_PATH"] + '/lib/exit_codes'

found_classes = []
STDIN.read.scan(/\bclass\b.*\bextends\b\s(\w*)/).each do | path |
	found_classes &lt;&lt; path
end

#TODO: Handle multiple matches.
TextMate.exit_show_tool_tip "Super class not found." if found_classes.size == 0

superclass = found_classes.pop()

#Search the project...
project_paths = []

# Collect all .as and .mxml files in the project src dir. Then filter for WORD.
TextMate.each_text_file do |file|
	project_paths.push(file) if File.extname(file) == ".as"
end
project_paths = project_paths.grep(/\b#{superclass}\.(as|mxml)/)

#TODO: Present list if there are multiple matches.
if project_paths.size &gt; 0
	TextMate.go_to :file =&gt; project_paths[0]
else
	TextMate.exit_show_tool_tip "Super class not found."
end


</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@D</string>
	<key>name</key>
	<string>Open Superclass</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>source.actionscript.3</string>
	<key>uuid</key>
	<string>18FA32FA-FB74-4EB9-A0D3-8699BD77E2A2</string>
</dict>
</plist>
